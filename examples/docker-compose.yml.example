version: '3.9'

volumes:
  users_pgdata:
  users_redis:
  events_pgdata:
  events_redis:
  teams_pgdata:
  teams_redis:

networks:
  olymp_network:
  users_network:
  events_network:
  teams_network:


services:
  gateway:
    build:
      context: ./gateway/
    restart: always
    env_file:
      - .env
    depends_on:
      - users
      - events
      - teams
      - mail
    networks:
      - olymp_network
    container_name: gateway_olymp_prod

  users:
    build:
      context: ./users/
    restart: always
    expose:
      - 8001:8000
    env_file:
      - .env
    environment:
      - POSTGRES_DB=users
    depends_on:
      - users_postgres
      - users_redis
    networks:
      - olymp_network
      - users_network
    command: bash -c "alembic upgrade head & python main.py"
    container_name: users_olymp_prod

  users_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=users
    volumes:
      - users_pgdata:/var/lib/postgresql/data/
    networks:
      - users_network
    container_name: users_postgres_olymp_prod

  users_redis:
    image: redis:alpine
    restart: always
    hostname: redis
    command:
      - redis-server
    expose:
      - 6379
    env_file:
      - .env
    networks:
      - users_network
    volumes:
      - users_redis:/data
    container_name: users_redis_olymp_prod

  events:
    build:
      context: ./events/
    restart: always
    expose:
      - 8002:8000
    env_file:
      - .env
    environment:
      - POSTGRES_DB=events
    depends_on:
      - events_postgres
      - events_redis
    networks:
      - olymp_network
      - events_network
    container_name: events_olymp_prod

  events_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=events
    networks:
      - events_network
    volumes:
      - events_pgdata:/var/lib/postgresql/data/
    container_name: events_postgres_olymp_prod

  events_redis:
    image: redis:alpine
    restart: always
    hostname: redis
    command:
      - redis-server
    expose:
      - 6379
    env_file:
      - .env
    networks:
      - events_network
    volumes:
      - events_redis:/data
    container_name: events_redis_olymp_prod

  teams:
    build:
      context: ./teams/
    restart: always
    expose:
      - 8003:8000
    env_file:
      - .env
    environment:
      - POSTGRES_DB=teams
    depends_on:
      - teams_postgres
      - teams_redis
    networks:
      - olymp_network
      - teams_network
    command: bash -c "alembic upgrade head & python main.py"
    container_name: teams_olymp_prod

  teams_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=teams
    networks:
      - teams_network
    volumes:
      - teams_pgdata:/var/lib/postgresql/data/
    container_name: teams_postgres_olymp_prod

  teams_redis:
    image: redis:alpine
    restart: always
    hostname: redis
    command:
      - redis-server
    expose:
      - 6379
    env_file:
      - .env
    networks:
      - teams_network
    volumes:
      - teams_redis:/data
    container_name: teams_redis_olymp_prod

  mail:
    build:
      context: ./mail/
    restart: always
    ports:
      - 8004:8000
    env_file:
      - .env
    networks:
      - olymp_network
    container_name: mail_olymp_prod

  nginx:
    image: nginx:stable-alpine
    restart: always
    working_dir: /app
    ports:
      - 80:80
    links:
      - gateway
    depends_on:
      - gateway
    volumes:
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
    networks:
      - olymp_network
    container_name: nginx_olymp_prod

  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt:rw
      - ./docker/certbot/www:/var/www/certbot:rw
    command: certonly --webroot --webroot-path=/var/www/certbot/ --email <your_email> --agree-tos --no-eff-email -d <domain (example.com)> -d <domain (www.example.com)>
    depends_on:
      - nginx
    container_name: certbot_olymp_prod
