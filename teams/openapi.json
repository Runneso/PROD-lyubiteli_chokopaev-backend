{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/ping": {
      "get": {
        "summary": "Ping",
        "description": "Ping handler\n:return:",
        "operationId": "ping_api_v1_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams": {
      "get": {
        "summary": "Get Teams",
        "description": "Handler for getting all teams\n:param session:\n:return:",
        "operationId": "get_teams_api_v1_teams_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  },
                  "type": "array",
                  "title": "Response Get Teams Api V1 Teams Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{event_id}": {
      "get": {
        "summary": "Get Teams By Event",
        "description": "Handler for getting teams by event\n:param event_id:\n:param session:\n:return:",
        "operationId": "get_teams_by_event_api_v1_teams__event_id__get",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  },
                  "title": "Response Get Teams By Event Api V1 Teams  Event Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team/{team_id}": {
      "get": {
        "summary": "Get Team",
        "description": "Handler for getting teams by id\n:param team_id:\n:param session:\n:return:",
        "operationId": "get_team_api_v1_team__team_id__get",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Team"
                    },
                    {
                      "$ref": "#/components/schemas/Status"
                    }
                  ],
                  "title": "Response Get Team Api V1 Team  Team Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/create": {
      "post": {
        "summary": "Create Team",
        "description": "Handler for creating teams\n:param create_data:\n:param session:",
        "operationId": "create_team_api_v1_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/remove": {
      "delete": {
        "summary": "Delete Team",
        "description": "Handler for deleting team\n:param team_id:\n:param session:",
        "operationId": "delete_team_api_v1_remove_delete",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/update": {
      "patch": {
        "summary": "Update Team",
        "description": "Handler for updating team\n:param update_data:\n:param session:",
        "operationId": "update_team_api_v1_update_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/createTag": {
      "post": {
        "summary": "Add Tag",
        "description": "Hanlder for adding tag to team\n:param tag_data:\n:param session:",
        "operationId": "add_tag_api_v1_createTag_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/deleteTag": {
      "delete": {
        "summary": "Delete Tag",
        "description": "Handler for deleting tag from team\n:param tag_data:\n:param session:",
        "operationId": "delete_tag_api_v1_deleteTag_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTag"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/createInvite": {
      "post": {
        "summary": "Send Invite",
        "description": "Hanlder for sending invites\n:param invite_data:\n:param session:",
        "operationId": "send_invite_api_v1_createInvite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteTeam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invites": {
      "get": {
        "summary": "Get Invites",
        "description": "Handler for getting invites\n:param invite_data:\n:param session:\n:return:",
        "operationId": "get_invites_api_v1_invites_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvites"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/answerInvite": {
      "post": {
        "summary": "Answer Invite",
        "description": "Handler for answering invites\n:param answer_data:\n:param session:\n:return:",
        "operationId": "answer_invite_api_v1_answerInvite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerInvite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/possibleMembers": {
      "get": {
        "summary": "Get Possible Members",
        "description": "Handler for getting possible members by team and event\n:param team_id:\n:param event_id:\n:param session:\n:param offset:",
        "operationId": "get_possible_members_api_v1_possibleMembers_get",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Possible Members Api V1 Possiblemembers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/possibleTeams": {
      "get": {
        "summary": "Get Possible Teams",
        "description": "Hanlder for getting possible teams by user and event\n:param event_id:\n:param user_id:\n:param session:\n:param offset:\n:return:",
        "operationId": "get_possible_teams_api_v1_possibleTeams_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Event Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  },
                  "title": "Response Get Possible Teams Api V1 Possibleteams Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/myTeam": {
      "post": {
        "summary": "Get My Team",
        "description": "Handler for getting user's team by user_id and event_id\n:param user_data:\n:param session:\n:return:",
        "operationId": "get_my_team_api_v1_myTeam_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetMyTeam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/deleteMember": {
      "delete": {
        "summary": "Delete Member",
        "description": "Handler for deleting member by team_id and user_id\n:param team_id:\n:param user_id:\n:param session:",
        "operationId": "delete_member_api_v1_deleteMember_delete",
        "parameters": [
          {
            "name": "team_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/withoutTeam": {
      "post": {
        "summary": "Get Users Without Team",
        "description": "Handler for getting users without team\n:param without_data:\n:param session:\n:return:",
        "operationId": "get_users_without_team_api_v1_withoutTeam_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WithoutTeam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WithoutUsers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/autogenerateTeam": {
      "post": {
        "summary": "Autogenerate Team",
        "description": "Handler for getting autogeneration teams\n:param team_data:\n:param session:",
        "operationId": "autogenerate_team_api_v1_autogenerateTeam_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutogenerateTeam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnswerInvite": {
        "properties": {
          "invite_id": {
            "type": "integer",
            "title": "Invite Id"
          },
          "isAccepted": {
            "type": "boolean",
            "title": "Isaccepted"
          }
        },
        "type": "object",
        "required": [
          "invite_id",
          "isAccepted"
        ],
        "title": "AnswerInvite"
      },
      "AutogenerateTeam": {
        "properties": {
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "members": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Members"
          }
        },
        "type": "object",
        "required": [
          "author_id",
          "event_id",
          "name",
          "members"
        ],
        "title": "AutogenerateTeam"
      },
      "CreateTeam": {
        "properties": {
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "need": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Need"
          }
        },
        "type": "object",
        "required": [
          "author_id",
          "event_id",
          "name",
          "size",
          "description",
          "need"
        ],
        "title": "CreateTeam"
      },
      "GetInvites": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "event_id"
        ],
        "title": "GetInvites"
      },
      "GetMyTeam": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "event_id"
        ],
        "title": "GetMyTeam"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InviteTeam": {
        "properties": {
          "team_id": {
            "type": "integer",
            "title": "Team Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "from_team": {
            "type": "boolean",
            "title": "From Team"
          }
        },
        "type": "object",
        "required": [
          "team_id",
          "user_id",
          "from_team"
        ],
        "title": "InviteTeam"
      },
      "Status": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "<Status>"
          }
        },
        "type": "object",
        "title": "Status"
      },
      "Team": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "author_id": {
            "type": "integer",
            "title": "Author Id"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "need": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Need"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "members": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Members"
          }
        },
        "type": "object",
        "required": [
          "id",
          "author_id",
          "event_id",
          "name",
          "size",
          "description",
          "need",
          "tags",
          "members"
        ],
        "title": "Team"
      },
      "UpdateTag": {
        "properties": {
          "team_id": {
            "type": "integer",
            "title": "Team Id"
          },
          "tag": {
            "type": "string",
            "title": "Tag"
          }
        },
        "type": "object",
        "required": [
          "team_id",
          "tag"
        ],
        "title": "UpdateTag"
      },
      "UpdateTeam": {
        "properties": {
          "team_id": {
            "type": "integer",
            "title": "Team Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "need": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Need"
          }
        },
        "type": "object",
        "required": [
          "team_id"
        ],
        "title": "UpdateTeam"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WithoutTeam": {
        "properties": {
          "users": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Users"
          },
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          }
        },
        "type": "object",
        "required": [
          "users",
          "event_id"
        ],
        "title": "WithoutTeam"
      },
      "WithoutUsers": {
        "properties": {
          "users": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Users"
          }
        },
        "type": "object",
        "required": [
          "users"
        ],
        "title": "WithoutUsers"
      }
    }
  }
}