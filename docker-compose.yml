version: '3.9'

volumes:
  files:
  users_pgdata:
  events_pgdata:
  leaderboard_pgdata:
  teams_pgdata:

networks:
  olymp_network:
  users_network:
  events_network:
  leaderboard_network:
  teams_network:


services:
  gateway:
    build:
      context: ./gateway/
    restart: always
    env_file:
      - ./docker/.env
    depends_on:
      - users
      - events
      - teams
      - mail
    networks:
      - olymp_network
    container_name: gateway_olymp

  users:
    build:
      context: ./users/
    restart: always
    expose:
      - 80
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=users
    depends_on:
      - users_postgres
    networks:
      - olymp_network
      - users_network
    command: bash -c "alembic upgrade head && python main.py"
    container_name: users_olymp

  users_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=users
    volumes:
      - users_pgdata:/var/lib/postgresql/data/
    networks:
      - users_network
    container_name: users_postgres_olymp

  teams:
      build:
        context: ./teams/
      restart: always
      expose:
        - 80
      env_file:
        - ./docker/.env
      environment:
        - POSTGRES_DB=teams
      depends_on:
        - teams_postgres
      networks:
        - olymp_network
        - teams_network
      command: bash -c "python main.py"
      container_name: teams_olymp

  teams_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=teams
    networks:
      - teams_network
    volumes:
      - teams_pgdata:/var/lib/postgresql/data/
    container_name: teams_postgres_olymp

  events:
    build:
      context: ./events/
    restart: always
    expose:
      - 80
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=events
    depends_on:
      - events_postgres
    networks:
      - olymp_network
      - events_network
    container_name: events_olymp

  events_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=events
    networks:
      - events_network
    volumes:
      - events_pgdata:/var/lib/postgresql/data/
    container_name: events_postgres_olymp

  leaderboard:
      build:
        context: ./leaderboard/
      restart: always
      expose:
        - 80
      env_file:
        - ./docker/.env
      environment:
        - POSTGRES_DB=leaderboard
      depends_on:
        - leaderboard_postgres
      networks:
        - olymp_network
        - leaderboard_network
      command: bash -c "python main.py"
      container_name: leaderboard_olymp

  leaderboard_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=leaderboard
    networks:
      - leaderboard_network
    volumes:
      - leaderboard_pgdata:/var/lib/postgresql/data/
    container_name: leaderboard_postgres_olymp

  mail:
    build:
      context: ./mail/
    restart: always
    expose:
      - 80
    env_file:
      - ./docker/.env
    networks:
      - olymp_network
    container_name: mail_olymp

  file_manager:
    build:
      context: ./file_manager/
    restart: always
    expose:
      - 80
    env_file:
      - ./docker/.env
    networks:
      - olymp_network
    volumes:
      - files:/app/files
    command: bash -c "python main.py"
    container_name: file_manager_olymp

  nginx:
    image: nginx:stable-alpine
    restart: always
    working_dir: /app
    ports:
      - 80:80
    links:
      - gateway
      - file_manager
    depends_on:
      - gateway
      - file_manager
    volumes:
      - ./docker/:/etc/nginx/conf.d:ro
    networks:
      - olymp_network
    container_name: nginx_olymp
