version: '3.9'

volumes:
  files:
  users_pgdata:
  users_redis:
  events_pgdata:
  events_redis:
  teams_pgdata:
  teams_redis:

networks:
  olymp_network:
  users_network:
  events_network:
  teams_network:


services:
  gateway:
    build:
      context: ./gateway/
    restart: always
    env_file:
      - ./docker/.env
    depends_on:
      - users
      - events
      - teams
      - mail
    networks:
      - olymp_network
    container_name: gateway_olymp

  users:
    build:
      context: ./users/
    restart: always
    expose:
      - 8001:8000
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=users
    depends_on:
      - users_postgres
      - users_redis
    networks:
      - olymp_network
      - users_network
    command: bash -c "alembic upgrade head && python main.py"
    container_name: users_olymp

  users_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=users
    volumes:
      - users_pgdata:/var/lib/postgresql/data/
    networks:
      - users_network
    container_name: users_postgres_olymp

  users_redis:
    image: redis:alpine
    restart: always
    hostname: redis
    command:
      - redis-server
    expose:
      - 6379
    env_file:
      - ./docker/.env
    networks:
      - users_network
    volumes:
      - users_redis:/data
    container_name: users_redis_olymp

  teams:
      build:
        context: ./teams/
      restart: always
      expose:
        - 8002:8000
      env_file:
        - ./docker/.env
      environment:
        - POSTGRES_DB=teams
      depends_on:
        - teams_postgres
        - teams_redis
      networks:
        - olymp_network
        - teams_network
      command: bash -c "python main.py"
      container_name: teams_olymp

    teams_postgres:
      image: postgres:alpine
      restart: always
      hostname: postgres
      env_file:
        - ./docker/.env
      environment:
        - POSTGRES_DB=teams
      networks:
        - teams_network
      volumes:
        - teams_pgdata:/var/lib/postgresql/data/
      container_name: teams_postgres_olymp

    teams_redis:
      image: redis:alpine
      restart: always
      hostname: redis
      command:
        - redis-server
      expose:
        - 6379
      env_file:
        - ./docker/.env
      networks:
        - teams_network
      volumes:
        - teams_redis:/data
      container_name: teams_redis_olymp

  events:
    build:
      context: ./events/
    restart: always
    expose:
      - 8003:80
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=events
    depends_on:
      - events_postgres
      - events_redis
    networks:
      - olymp_network
      - events_network
    container_name: events_olymp

  events_postgres:
    image: postgres:alpine
    restart: always
    hostname: postgres
    env_file:
      - ./docker/.env
    environment:
      - POSTGRES_DB=events
    networks:
      - events_network
    volumes:
      - events_pgdata:/var/lib/postgresql/data/
    container_name: events_postgres_olymp

  events_redis:
    image: redis:alpine
    restart: always
    hostname: redis
    command:
      - redis-server
    expose:
      - 6379
    env_file:
      - ./docker/.env
    networks:
      - events_network
    volumes:
      - events_redis:/data
    container_name: events_redis_olymp

  mail:
    build:
      context: ./mail/
    restart: always
    expose:
      - 8004:8000
    env_file:
      - ./docker/.env
    networks:
      - olymp_network
    container_name: mail_olymp

  file_manager:
    build:
      context: ./file_manager/
    restart: always
    expose:
      - 8005:8000
    env_file:
      - ./docker/.env
    networks:
      - olymp_network
    volumes:
      - files:/file_manager/files
    container_name: file_manager_olymp

  nginx:
    image: nginx:stable-alpine
    restart: always
    working_dir: /app
    ports:
      - 80:80
    links:
      - gateway
    depends_on:
      - gateway
    volumes:
      - ./docker/:/etc/nginx/conf.d:ro
    networks:
      - olymp_network
    container_name: nginx_olymp
